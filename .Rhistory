}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a <- makeVector(c(1,2,3,4))
a$get()
a$mean
cachemean(a)
a$getmean()
chacemean(a)
cachemean(a)
a$set(c(10,20,30,40))
a$getmean()
cachemean(a)
cachemean(a)
a$get()
a$setmean(0)
a$getmean()
a$get(0)
a$get()
cachemean(a)
a <- makeVector(c(5,25,125,625)
)
a$get()
chachemean(a)
cachemean(a)
cachemean(a)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
crazy <- function() {
x <<- 3.14                   # variable x in the containing environment (global in this case) is updated to be 3.14
print(x)                        # since no local variable 'x' exists within function 'crazy' R searches the containing environments
{ print(x);                     # this is to demonstrate the function, not a code block, is the smallest environment in R
x <- 42; print(x)         # local variable 'x' is declared (created) and assigned the value 42; overrides the variable 'x' in
}                                  # the containing environment
print(x)                       # since local variable 'x' now exists within the function there is no need to search the containing
}                                   # environment (global in this case)
x<-0
crazy()
x
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
crazy <- function() {                # create a new environment with a local variable 'x' and access to another variable 'x'
# declared somewhere outside this function
x <- 3.14                                # assign the numeric value 3.14 to local variable 'x'
print(x)                                   # output the current value of local variable 'x' (1)
{ print(x);                                 # output the current value of local variable 'x' (2)
x <<- 42;                              # assign the numeric value 42 to variable 'x' declared outside this function (3)
print(x)                                 # output the current value of local variable 'x' (4)
}
print(x)                                   # output the current value of local variable 'x' (5)
}
x<-0
x
crazy()
x
?show
?solve
?matrix
data <-c<(0,1,0,1)
data <-c(0,1,0,1)
data
matrix(data, 2,2)
data <-(1,0,1,0)
data <-c(1,0,1,0)
matrix(data, 2,2)
data <-c(1,1,0,0)
matrix(data, 2,2)
data <-c(1,0,0,1)
matrix(data, 2,2)
m1 <- matrix(data,2,2)
m1
solve(m1)
dim(m1)
str(m1)
as.matrix(m1)
str(m1)
m1
solve(m1)
is.matrix(m1)
?solve
data <- c(4,3,3,2)
m2 <- matrix(data,2,2)
m2
sovle(m2)
solve(m2)
?list
